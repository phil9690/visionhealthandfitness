run.config:
  engine: ruby

  extra_packages:
    - nodejs
    - nginx

deploy.config:
  extra_steps:
    - rake assets:precompile RAILS_ENV=production
  before_live:
    web.main:
      - rake db:migrate RAILS_ENV=production

data.storage:
  image: nanobox/unfs

  extra_packages:
    - py27-awscli

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        (
          tar cz -C /data/var/db/unfs/ |
          tee /dev/fd/4 |
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-$(date -u +%Y-%m-%d.%H-%M-%S).tgz --data-binary @-
        ) 4>&1 |
        aws s3 cp - s3://${AWS_S3_BACKUP_BUCKET}/backup-${HOSTNAME}-$(date -u +%Y-%m-%d\ %H:%M:%S).tgz &&
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        json_pp |
        grep ${HOSTNAME} |
        sort |
        head -n-1 |
        sed 's/.*: "\(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
          aws s3 rm s3://${AWS_S3_BACKUP_BUCKET}/${file}
        done

data.mysql:
  image: nanobox/mysql:5.6

  extra_packages:
    - py27-awscli

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        (
          mysqldump --disable-keys --hex-blob -u ${DATA_MYSQL_USER} -p"${DATA_MYSQL_PASS}" -h ${DATA_MYSQL_HOST} --databases gonano |
          gzip |
          tee /dev/fd/4 |
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-$(date -u +%Y-%m-%d.%H-%M-%S).sql.gz --data-binary @-
        ) 4>&1 |
        aws s3 cp - s3://${AWS_S3_BACKUP_BUCKET}/backup-${HOSTNAME}-$(date -u +%Y-%m-%d\ %H:%M:%S).tgz &&
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        json_pp |
        grep ${HOSTNAME} |
        sort |
        head -n-1 |
        sed 's/.*: "\(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
          aws s3 rm s3://${AWS_S3_BACKUP_BUCKET}/${file}
        done

web.main:
  start:
    nginx: nginx -c /app/config/nginx.conf
    puma: bundle exec puma -C /app/config/puma.rb

  writable_dirs:
    - tmp
    - log

  log_watch:
    rails: 'log/production.log'
